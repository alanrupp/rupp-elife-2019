filter(State %in% c("NREM", "REM")) %>%
gather(-State, key = "Mouse", value = "Percent") %>%
mutate("Genotype" = ifelse(str_detect(Mouse, "^Control"), "Control", "Brn3b-DTA")) %>%
mutate(Genotype = factor(Genotype, levels = c("Control", "Brn3b-DTA"))) %>%
mutate(State = factor(State, levels = c('NREM', 'REM')))
nrem_rem
# Fig 4-S1A: total time spent nrem / rem
state_percent_plot(nrem_rem)
# Fig 4-S1A: total time spent nrem / rem
state_percent_plot(nrem_rem) +
scale_y_continuous(limits = c(0, 100))
# Fig 4-S1A: total time spent nrem / rem
state_percent_plot(nrem_rem) +
scale_y_continuous(limits = c(0, 100), expand = c(0, 0))
# Fig 4-S1A: total time spent nrem / rem
state_percent_plot(nrem_rem) +
scale_y_continuous(limits = c(0, 100), expand = c(0, 0)) +
ylab("24-hr sleep time\n(% total sleep)")
# t-test of NREM
t.test(
filter(nrem_rem, State == 'NREM' & Genotype == 'Control')$Percent,
filter(nrem_rem, State == 'NREM' & Genotype == 'Brn3b-DTA')$Percent
)$p.value
# t-test of REM (should be same as NREM)
t.test(
filter(nrem_rem, State == 'REM' & Genotype == 'Control')$Percent,
filter(nrem_rem, State == 'REM' & Genotype == 'Brn3b-DTA')$Percent
)$p.value
# Fig 4A: Control 24 hr
one_day_plot(one_hr, "Control", "black")
head(paired)
# - Testing Control vs. Brn3b-DTA for time spent asleep with light pulse ------
paired_model <- aov(Percent ~ Genotype * Treatment,
data = filter(paired, State == "Sleep"))
pairs(emmeans(paired_model, ~ Treatment | Genotype))
pairs(emmeans(paired_model, ~ Genotype | Treatment))
head(paired)
mean_values <-
paired_df %>%
group_by(Treatment, Genotype) %>%
summarize(mean = mean(Percent),
sem = sd(Percent)/sqrt(n()))
paired_combined_plot <- function(paired_df, state) {
paired_df <- paired_df %>%
filter(State == state)
mean_values <-
paired_df %>%
group_by(Treatment, Genotype) %>%
summarize(mean = mean(Percent),
sem = sd(Percent)/sqrt(n()))
mean_values %>%
ggplot(aes(x = Treatment, y = mean)) +
geom_col(aes(fill = Treatment), color = "black") +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width = 0.4)
}
paired_combined_plot(paired, "Sleep")
paired_combined_plot <- function(paired_df, state) {
paired_df <- paired_df %>%
filter(State == state)
mean_values <-
paired_df %>%
group_by(Treatment, Genotype) %>%
summarize(mean = mean(Percent),
sem = sd(Percent)/sqrt(n()))
mean_values %>%
ggplot(aes(x = Treatment, y = mean)) +
geom_col(aes(fill = Treatment), color = "black") +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width = 0.4) +
facet_wrap(~Genotype)
}
paired_combined_plot(paired, "Sleep")
paired_combined_plot <- function(paired_df, state) {
paired_df <- paired_df %>%
filter(State == state)
mean_values <-
paired_df %>%
group_by(Treatment, Genotype) %>%
summarize(mean = mean(Percent),
sem = sd(Percent)/sqrt(n()))
mean_values %>%
ggplot(aes(x = Treatment, y = mean)) +
geom_col(aes(fill = Treatment), color = "black", show.legend = FALSE) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width = 0.4) +
geom_jitter(data = paired_df, aes(color = Genotype),
show.legend = FALSE) +
scale_color_manual(values = c("black", "navyblue")) +
scale_fill_manual(values = c("white", "gray")) +
labs(y = "Time spent asleep (%)", x = element_blank()) +
facet_wrap(~Genotype) +
theme_classic()
}
paired_combined_plot(paired, "Sleep")
paired_combined_plot <- function(paired_df, state) {
paired_df <- paired_df %>%
filter(State == state)
mean_values <-
paired_df %>%
group_by(Treatment, Genotype) %>%
summarize(mean = mean(Percent),
sem = sd(Percent)/sqrt(n()))
mean_values %>%
ggplot(aes(x = Treatment, y = mean)) +
geom_col(aes(fill = Treatment), color = "black", show.legend = FALSE) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width = 0.4) +
geom_jitter(data = paired_df, aes(color = Genotype, y = Percent),
show.legend = FALSE) +
scale_color_manual(values = c("black", "navyblue")) +
scale_fill_manual(values = c("white", "gray")) +
labs(y = "Time spent asleep (%)", x = element_blank()) +
facet_wrap(~Genotype) +
theme_classic()
}
paired_combined_plot(paired, "Sleep")
paired_combined_plot <- function(paired_df, state) {
paired_df <- paired_df %>%
filter(State == state)
mean_values <-
paired_df %>%
group_by(Treatment, Genotype) %>%
summarize(mean = mean(Percent),
sem = sd(Percent)/sqrt(n()))
mean_values %>%
ggplot(aes(x = Treatment, y = mean)) +
geom_col(aes(fill = Treatment), color = "black", show.legend = FALSE) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width = 0.4) +
geom_jitter(data = paired_df, aes(color = Genotype, y = Percent),
show.legend = FALSE, width = 0.2) +
scale_color_manual(values = c("black", "navyblue")) +
scale_fill_manual(values = c("white", "gray")) +
scale_y_continuous(limits = c(0, max(paired_df$Percent) * 1.1),
expand = c(0, 0)) +
labs(y = "Time spent asleep (%)", x = element_blank()) +
facet_wrap(~Genotype) +
theme_classic()
}
paired_combined_plot(paired, "Sleep")
pairs(emmeans(paired_model, ~ Treatment | Genotype))
pairs(emmeans(paired_model, ~ Genotype | Treatment))
# ANOVA model of effect of light by genotype, comparing genotypes and treatments
paired_model <- lmer(Percent ~ Genotype * Treatment + (1|Mouse),
data = filter(paired, State == "Sleep"))
pairs(emmeans(paired_model, ~ Treatment | Genotype))
pairs(emmeans(paired_model, ~ Genotype | Treatment))
library(tidyverse)
library(lme4); library(emmeans); library(lmerTest)
# - Read in data --------------------------------------------------------------
wt <- read_csv("wt.csv")
mko <- read_csv("mko.csv")
mo <- read_csv("mo.csv")
# - Plotting temperature over 48 hrs ------------------------------------------
# function to make plot
two_day_plot <- function(df, color) {
df %>%
gather(-Time, key = "Mouse", value = "Temp") %>%
group_by(Time) %>%
summarize(mean = mean(Temp),
sem = sd(Temp)) %>%
ggplot(aes(x = Time, y = mean)) +
geom_line(color = color, size = 1) +
geom_ribbon(aes(ymin = mean - sem, ymax = mean + sem),
alpha = 0.4, fill = color) +
geom_rect(aes(ymin = 35, ymax = 35.2, xmin = 0, xmax = 2),
color = "black", fill = "black") +
geom_rect(aes(ymin = 35, ymax = 35.2, xmin = 0.25, xmax = 0.75),
color = "black", fill = "white") +
geom_rect(aes(ymin = 35, ymax = 35.2, xmin = 1.25, xmax = 1.75),
color = "black", fill = "white") +
geom_rect(aes(ymin = 35, ymax = 35.2, xmin = 1+20/24, xmax = 1+23/24),
color = "black", fill = "white") +
scale_x_continuous(limits = c(0, 2),
breaks = seq.int(0, 2, length.out = 9),
labels = rep(c(18, 0, 6, 12), length.out = 9),
expand = c(0, 0)) +
scale_y_continuous(limits = c(35, 38.6), expand = c(0, 0),
breaks = seq(35, 38.5, by = 0.5),
labels = c(35, "", 36, "", 37, "", 38, "")) +
labs(x = "Zeitgeber time (hr)", y = "Body temperature (Â°C)") +
theme_classic() +
theme(axis.text = element_text(color = "black"))
}
# Fig 1B: WT 48 hrs
two_day_plot(wt, "black")
# Fig 1D: MO 48 hrs
two_day_plot(mo, "forestgreen")
# Fig 1E: MKO 48 hrs
two_day_plot(mko, "maroon")
# - Find diurnal amplitude ----------------------------------------------------
calc_amplitude <- function(df, geno) {
df %>%
gather(-Time, key = "Mouse", value = "Temp") %>%
mutate("tod" = case_when(
Time > 0.25 & Time <= 0.75 ~ "Day",
Time > 0.75 & Time <= 1.25 ~ "Night"
)) %>%
group_by(tod, Mouse) %>%
summarize(Temp = mean(Temp)) %>%
group_by(Mouse) %>%
mutate(Temp = Temp - lag(Temp)) %>%
filter(!is.na(tod) & !is.na(Temp)) %>%
select(-tod) %>%
mutate("Geno" = geno)
}
# calculate all and combine
amplitudes <- bind_rows(
calc_amplitude(wt, "WT"),
calc_amplitude(mo, "MO"),
calc_amplitude(mko, "MKO")
) %>%
mutate(Geno = factor(Geno, levels = c("WT", "MO", "MKO")))
# Fig 1F: diurnal amplitudes
amplitudes %>%
group_by(Geno) %>%
summarize(mean = mean(Temp),
sd = sd(Temp)) %>%
ggplot(aes(x = Geno, y = mean)) +
geom_col(fill = "white", color = "black") +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = 0.4) +
geom_jitter(data = amplitudes, aes(y = Temp, color = Geno),
width = 0.3, show.legend = FALSE) +
scale_color_manual(values = c("black", "forestgreen", "maroon")) +
scale_x_discrete(labels = c("Wildtype", "Melanopsin-only", "Melanopsin KO")) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1.6),
breaks = c(0, 0.5, 1, 1.5)) +
labs(y = "Diurnal amplitude (Â°C)", x = element_blank()) +
theme_classic() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
# ANOVA model comparing amplitude across genotypes
amplitude_model <- aov(Temp ~ Geno, data = amplitudes)
summary(amplitude_model)
# - Plots of relative body temperature during light pulse ---------------------
# find time closest to 20:00
find_pulse_start <- function(df, time0) {
which(abs(df$Time - time0) == min(abs(df$Time - time0)))
}
make_relative <- function(df, time0) {
df2 <- apply(df[,2:ncol(df)], 2, function(x) x - x[find_pulse_start(df, time0)])
df2 <- as.data.frame(df2) %>%
mutate(Time = df$Time)
}
pulse_plot <- function(df, color) {
# plot
make_relative(df, 1+20/24) %>%
gather(-Time, key = "Mouse", value = "Temp") %>%
group_by(Time) %>%
summarize(mean = mean(Temp),
sd = sd(Temp)) %>%
ggplot(aes(x = Time, y = mean)) +
geom_line(color = color) +
geom_hline(aes(yintercept = 0), linetype = "dashed") +
geom_rect(aes(xmin = 1+19/24, xmax = 2, ymin = -1.6, ymax = -1.48),
color = "black", fill = "black") +
geom_rect(aes(xmin = 1+20/24, xmax = 1+23/24, ymin = -1.6, ymax = -1.48),
color = "black", fill = "white") +
geom_ribbon(aes(ymin = mean - sd, ymax = mean + sd),
alpha = 0.4, fill = color) +
scale_x_continuous(limits = c(1+19/24, 2), expand = c(0, 0),
breaks = seq(1+19/24, 2, by = 1/24),
labels = seq(13, 18, by = 1)) +
scale_y_continuous(limits = c(-1.6, 1),
breaks = c(-1, 0, 1),
expand = c(0, 0)) +
labs(y = "Change in body temperature (°C)", x = "Zeitgeber time (hr)") +
theme_classic() +
theme(axis.text = element_text(color = "black"))
}
# Fig 1C: WT light pulse
pulse_plot(wt, "black")
# Fig 1G: MO light pulse
pulse_plot(mo, "forestgreen")
# Fig 1I: MKO light pulse
pulse_plot(mko, "maroon")
library(tidyverse)
library(lme4); library(lmerTest); library(emmeans)
# - 24-hr sleep / wake with 1-hr bins -----------------------------------------
# one-hour binned data
one_hr <- readxl::read_xlsx('Sleep Raw Data.xlsx', sheet = 2) %>%
gather(-Hour, key = "Mouse", value = "Sleep") %>%
mutate("Genotype" = ifelse(str_detect(Mouse, "^Control"), "Control", "Brn3b-DTA")) %>%
mutate(Genotype = factor(Genotype, levels = c("Control", "Brn3b-DTA"))) %>%
mutate(Hour = Hour + 0.5)
one_day_plot <- function(one_hr_bin_df, genotype, color) {
one_hr_bin_df %>%
filter(Genotype == genotype) %>%
group_by(Hour) %>%
summarize(mean = mean(Sleep), sem = sd(Sleep)/sqrt(n())) %>%
ggplot(aes(x = Hour, y = mean)) +
geom_rect(aes(xmin = 0, xmax = 24, ymin = 0, ymax = 4),
fill = "black", color = "black") +
geom_rect(aes(xmin = 0, xmax = 12, ymin = 0, ymax = 4),
fill = "white", color = "black") +
geom_ribbon(aes(ymin = mean - sem, ymax = mean + sem),
alpha = 0.4, show.legend = FALSE, fill = color) +
geom_line(show.legend = FALSE, color = color) +
theme_classic() +
scale_x_continuous(expand = c(0,0), limits = c(0, 24),
breaks = seq(0, 24, 6)) +
scale_y_continuous(expand = c(0,0), limits = c(0, 100)) +
labs(x = 'Zeitgeber time (hr)', y = 'Time spent asleep (%)')
}
# Fig 4A: Control 24 hr
one_day_plot(one_hr, "Control", "black")
# Fig 4B: Brn3b-DTA 24 hr
one_day_plot(one_hr, "Brn3b-DTA", "navyblue")
one_hr_model <- lmer(Sleep ~ Genotype * factor(Hour) + (1|Mouse), data = one_hr)
pairs(emmeans(one_hr_model, ~ Genotype | Hour))
summary(one_hr_model)
pairs(emmeans(one_hr_model, ~ Genotype | Hour))
wake_sleep <- readxl::read_xlsx('Sleep Raw Data.xlsx', sheet = 1, n_max = 2) %>%
rename("State" = X__1) %>%
gather(-State, key = "Mouse", value = "Percent") %>%
mutate("Genotype" = ifelse(str_detect(Mouse, "^Control"), "Control", "Brn3b-DTA")) %>%
mutate(Genotype = factor(Genotype, levels = c("Control", "Brn3b-DTA"))) %>%
mutate(State = factor(State, levels = c('Wake', 'Sleep')))
state_percent_plot <- function(state_df) {
state_df %>%
group_by(Genotype, State) %>%
summarize(mean = mean(Percent), sem = sd(Percent)/sqrt(n())) %>%
ggplot(aes(x = Genotype, y = mean)) +
geom_col(position = 'dodge', color = 'black',
fill = 'white', show.legend = FALSE) +
geom_errorbar(aes(ymin= mean - sem, ymax = mean + sem),
width = 0.4, color = 'black') +
geom_jitter(data = state_df,
aes(x = Genotype, y = Percent, color = Genotype),
show.legend = FALSE, width = 0.2, alpha = 0.5, stroke = 0) +
scale_y_continuous(expand = c(0, 0),
limits = c(0, max(state_df$Percent*1.1))) +
scale_color_manual(values = c('black', 'navyblue')) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)) +
labs(y = 'Total time (%)', x = element_blank()) +
facet_wrap(~State)
}
# Fig 4C: total time spent wake / sleep
state_percent_plot(wake_sleep)
# stats
t.test(
filter(wake_sleep, State == 'Wake' & Genotype == 'Control')$Percent,
filter(wake_sleep, State == 'Wake' & Genotype == 'Brn3b-DTA')$Percent
)$p.value
nrem_rem <- readxl::read_xlsx('Sleep Raw Data.xlsx', sheet = 1) %>%
rename("State" = X__1) %>%
filter(State %in% c("NREM", "REM")) %>%
gather(-State, key = "Mouse", value = "Percent") %>%
mutate("Genotype" = ifelse(str_detect(Mouse, "^Control"), "Control", "Brn3b-DTA")) %>%
mutate(Genotype = factor(Genotype, levels = c("Control", "Brn3b-DTA"))) %>%
mutate(State = factor(State, levels = c('NREM', 'REM')))
# Fig 4-S1A: total time spent nrem / rem
state_percent_plot(nrem_rem) +
scale_y_continuous(limits = c(0, 100), expand = c(0, 0)) +
ylab("24-hr sleep time\n(% total sleep)")
# t-test of NREM
t.test(
filter(nrem_rem, State == 'NREM' & Genotype == 'Control')$Percent,
filter(nrem_rem, State == 'NREM' & Genotype == 'Brn3b-DTA')$Percent
)$p.value
reshape_pulse <- function(geno, skip, n_max) {
df <-
readxl::read_xlsx('Sleep Raw Data.xlsx', sheet = 4, skip = skip,
n_max = n_max) %>%
rename("Time" = `Time Post Light Pulse`) %>%
gather(-Time, key = "Mouse", value = "Percent") %>%
mutate("Treatment" = str_extract(Mouse, "^[A-Za-z]+")) %>%
mutate(Mouse = ifelse(str_detect(Mouse, "[0-9]$"),
str_extract(Mouse, "[0-9]+$"), 0)) %>%
mutate("Genotype" = geno) %>%
mutate(Mouse = paste(Genotype, Mouse, sep = "_")) %>%
mutate(Time = Time - 15)
return(df)
}
# read in data and add annotation
pulse_30min <- bind_rows(
reshape_pulse("Control", 1, 6),
reshape_pulse("Brn3b-DTA", 9, 6)
) %>%
mutate(Genotype = factor(Genotype, levels = c("Control", "Brn3b-DTA"))) %>%
mutate(Treatment = factor(Treatment, levels = c("Baseline", "Light")))
# Plot Percent sleep with time
plot_light_pulse <- function(pulse_df, geno, colors) {
pulse_df %>%
filter(Genotype == geno) %>%
group_by(Treatment, Time) %>%
summarize(mean = mean(Percent),
sem = sd(Percent)/sqrt(n())) %>%
ggplot(aes(x = Time, y = mean, group = Treatment)) +
geom_line(aes(fill = Treatment), show.legend = FALSE) +
geom_ribbon(aes(ymin = mean - sem, ymax = mean + sem, fill = Treatment),
alpha = 0.4, show.legend = FALSE) +
scale_fill_manual(values = colors) +
scale_color_manual(values = colors) +
scale_y_continuous(limits = c(0, 100), expand = c(0,0)) +
labs(x = "Time from lights-on (min)", y = "Time spent asleep (%)") +
theme_classic()
}
# Fig 4D
plot_light_pulse(pulse_30min, "Control", c("black", "gray50"))
# Fig 4F
plot_light_pulse(pulse_30min, "Brn3b-DTA", c("navyblue", "lightblue"))
# Light pulse model
pulse_model <- lmer(Percent ~ Time * sqrt(Time) * Genotype * Treatment + (1|Mouse),
data = pulse_30min)
pairs(emmeans(
ref_grid(pulse_model, cov.reduce = FALSE), ~ Treatment | Genotype + Time)
)
reshape_paired <- function(geno, skip, n_max) {
df <-
readxl::read_xlsx('Sleep Raw Data.xlsx', sheet = 3, skip = skip,
n_max = n_max)
colnames(df)[1] <- "State"
df <- df %>%
gather(-State, key = "Mouse", value = "Percent") %>%
mutate("Treatment" = str_extract(Mouse, "^[A-Za-z]+")) %>%
mutate(Mouse = ifelse(str_detect(Mouse, "[0-9]$"),
str_extract(Mouse, "[0-9]+$"), 0)) %>%
mutate("Genotype" = geno) %>%
mutate(Mouse = paste(Genotype, Mouse, sep = "_"))
return(df)
}
paired <- bind_rows(
reshape_paired("Control", 0, 4),
reshape_paired("Brn3b-DTA", 5, 4)
) %>%
mutate(Genotype = factor(Genotype, levels = c("Control", "Brn3b-DTA"))) %>%
mutate(Treatment = factor(Treatment, levels = c("Baseline", "Light"))) %>%
filter(!is.na(Percent))
paired_plot <- function(paired_df, geno, states, color) {
paired_df <- paired_df %>%
filter(State %in% states)
# set plot attributes
if (states == "Sleep") {
y_title = "Time spent asleep (%)"
y_max = max(paired_df$Percent) * 1.1
} else if (states == c("NREM", "REM")) {
y_title = "ZT14-17 sleep time\n(% total sleep)"
y_max = 100
}
# plot
plt <-
paired_df %>%
filter(Genotype == geno) %>%
ggplot(aes(x = Treatment, y = Percent, group = Mouse)) +
geom_line(color = color) +
geom_point(color = color) +
scale_y_continuous(limits = c(0, y_max),
expand = c(0, 0)) +
labs(y = y_title, x = element_blank()) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
if (length(states) > 1) {
plt <- plt + facet_wrap(~State)
}
return(plt)
}
# Fig 4E: Control sleep baseline vs. light
paired_plot(paired, "Control", "Sleep", "black")
# Fig 4G: Brn3b-DTA sleep baseline vs. light
paired_plot(paired, "Brn3b-DTA", "Sleep", "navyblue")
paired_stats <- function(paired_df, geno, state) {
paired_df <- paired_df %>%
filter(Genotype == geno) %>%
filter(State == state)
t.test(
filter(paired_df, Treatment == "Baseline")$Percent,
filter(paired_df, Treatment == "Light")$Percent,
paired = TRUE
)$p.value
}
# paired t-test of effect of light on sleep amount
paired_stats(paired, "Control", "Sleep")
paired_stats(paired, "Brn3b-DTA", "Sleep")
# NREM vs. REM
# Fig 4-S1B: Control NREM/REM baseline vs. light
paired_plot(paired, "Control", c("NREM", "REM"), "black")
# Fig 4-S1C: Brn3b-DTA NREM/REM baseline vs. light
paired_plot(paired, "Brn3b-DTA", c("NREM", "REM"), "navyblue")
# stats
paired_stats(paired, "Control", "NREM")
paired_stats(paired, "Brn3b-DTA", "NREM")
paired_stats(paired, "Control", "REM")
paired_stats(paired, "Brn3b-DTA", "REM")
# - Testing Control vs. Brn3b-DTA for time spent asleep with light pulse ------
paired_combined_plot <- function(paired_df, state) {
paired_df <- paired_df %>%
filter(State == state)
mean_values <-
paired_df %>%
group_by(Treatment, Genotype) %>%
summarize(mean = mean(Percent),
sem = sd(Percent)/sqrt(n()))
mean_values %>%
ggplot(aes(x = Treatment, y = mean)) +
geom_col(aes(fill = Treatment), color = "black", show.legend = FALSE) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width = 0.4) +
geom_jitter(data = paired_df, aes(color = Genotype, y = Percent),
show.legend = FALSE, width = 0.2) +
scale_color_manual(values = c("black", "navyblue")) +
scale_fill_manual(values = c("white", "gray")) +
scale_y_continuous(limits = c(0, max(paired_df$Percent) * 1.1),
expand = c(0, 0)) +
labs(y = "Time spent asleep (%)", x = element_blank()) +
facet_wrap(~Genotype) +
theme_classic()
}
paired_combined_plot(paired, "Sleep")
ggsave("C:/Users/lab/alanr/Desktop/change.png", width = 5, height = 4, units = "in", dpi = 300)
ggsave("C:/Users/Desktop/alanr/Desktop/change.png", width = 5, height = 4, units = "in", dpi = 300)
ggsave("C:/Users/alanr/Desktop/change.png", width = 5, height = 4, units = "in", dpi = 300)
paired_model <- lmer(Percent ~ Genotype * Treatment + (1|Mouse),
data = filter(paired, State == "Sleep"))
pairs(emmeans(paired_model, ~ Treatment | Genotype))
pairs(emmeans(paired_model, ~ Genotype | Treatment))
